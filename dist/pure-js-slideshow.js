// Generated by CoffeeScript 1.8.0
var PureJSSlideshow;

PureJSSlideshow = (function() {
  PureJSSlideshow.prototype.container = null;

  PureJSSlideshow.prototype.containerClass = "pure-js-slideshow";

  PureJSSlideshow.prototype.activeItemIndex = 0;

  PureJSSlideshow.prototype.visibleItemsNumber = 3;

  PureJSSlideshow.prototype.selectors = {
    item: ".pure-js-slideshow-item",
    image: ".pure-js-slideshow-image"
  };

  function PureJSSlideshow(containerId) {
    this.containerId = containerId;
    this.container = document.getElementById(this.containerId);
    if (!this.container) {
      throw new Error("No container provided");
    }
  }

  PureJSSlideshow.prototype.initialize = function(files) {
    this.files = files;
    this.render();
    this.item = document.querySelectorAll(this.selectors.item);
    this.image = document.querySelectorAll(this.selectors.image);
    this.width = this.getItemsWidth();
    this.prev.addEventListener("click", (function(_this) {
      return function() {
        return _this.switchItem("prev");
      };
    })(this), false);
    return this.next.addEventListener("click", (function(_this) {
      return function() {
        return _this.switchItem("next");
      };
    })(this), false);
  };

  PureJSSlideshow.prototype.render = function() {
    var file, image, item, _i, _len, _ref, _results;
    this.container.classList.add(this.containerClass);
    this.inner = this.createElement("div", {
      className: "pure-js-slideshow-inner"
    }, this.container);
    this.prev = this.createElement("button", {
      className: "pure-js-slideshow-button pure-js-slideshow-prev",
      innerHTML: "Prev"
    }, this.container);
    this.next = this.createElement("button", {
      className: "pure-js-slideshow-button pure-js-slideshow-next",
      innerHTML: "Next"
    }, this.container);
    _ref = this.files;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      file = _ref[_i];
      item = this.createElement("div", {
        className: "pure-js-slideshow-item"
      }, this.inner);
      _results.push(image = this.createElement("img", {
        className: "pure-js-slideshow-image",
        src: file
      }, item));
    }
    return _results;
  };

  PureJSSlideshow.prototype.createElement = function(tagName, attributes, container) {
    var element, key, value;
    element = document.createElement(tagName);
    for (key in attributes) {
      value = attributes[key];
      element[key] = value;
    }
    if (container) {
      container.appendChild(element);
    }
    return element;
  };

  PureJSSlideshow.prototype.switchItem = function(direction) {
    var nextIndex;
    if (direction === "next") {
      nextIndex = this.getNextIndex();
    } else if (direction === "prev") {
      nextIndex = this.getPrevIndex();
    }
    this.inner.style.left = -this.getShiftByIndex(nextIndex) + "px";
    return this.activeItemIndex = nextIndex;
  };

  PureJSSlideshow.prototype.getPrevIndex = function() {
    if (this.activeItemIndex > 0) {
      return this.activeItemIndex - 1;
    } else {
      return this.item.length - this.visibleItemsNumber;
    }
  };

  PureJSSlideshow.prototype.getNextIndex = function() {
    if (this.activeItemIndex < this.item.length - this.visibleItemsNumber) {
      return this.activeItemIndex + 1;
    } else {
      return 0;
    }
  };

  PureJSSlideshow.prototype.getShiftByIndex = function(index) {
    var i, shift, width, _i;
    shift = 0;
    for (i = _i = 0; 0 <= index ? _i <= index : _i >= index; i = 0 <= index ? ++_i : --_i) {
      width = this.width[i - 1];
      if (width) {
        shift += width;
      }
    }
    return shift;
  };

  PureJSSlideshow.prototype.getItemsWidth = function() {
    var item, width, _i, _len, _ref;
    width = [];
    _ref = this.item;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      item = _ref[_i];
      width.push(item.offsetWidth);
    }
    return width;
  };

  return PureJSSlideshow;

})();
